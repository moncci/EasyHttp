<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EasyHttp</name>
    </assembly>
    <members>
        <member name="F:EasyHttp.Bll.EasyHttpWebRequest._requestObject">
            <summary>
            请求参数对象
            </summary>
        </member>
        <member name="F:EasyHttp.Bll.EasyHttpWebRequest._request">
            <summary>
            请求对象
            </summary>
        </member>
        <member name="M:EasyHttp.Bll.EasyHttpWebRequest.SetCertificate(EasyHttp.RequestObject)">
            <summary>
            设置证书
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:EasyHttp.Bll.EasyHttpWebRequest.SetProxy(EasyHttp.RequestObject)">
            <summary>
            设置代理
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:EasyHttp.Bll.EasyHttpWebRequest.SetCookie(EasyHttp.RequestObject)">
            <summary>
            设置cookie
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:EasyHttp.Bll.EasyHttpWebRequest.SetPostData(EasyHttp.RequestObject)">
            <summary>
            设置post数据
            </summary>
            <param name="obj"></param>
        </member>
        <member name="F:EasyHttp.Bll.EasyHttpWebResponse._requestObject">
            <summary>
            请求参数对象
            </summary>
        </member>
        <member name="F:EasyHttp.Bll.EasyHttpWebResponse._response">
            <summary>
            相应对象
            </summary>
        </member>
        <member name="M:EasyHttp.Bll.EasyHttpWebResponse.#ctor(System.Net.HttpWebResponse,EasyHttp.RequestObject)">
            <summary>
            构造方式
            </summary>
            <param name="response"></param>
            <param name="requestObject"></param>
        </member>
        <member name="M:EasyHttp.Bll.EasyHttpWebResponse.CreateResponse(System.Net.HttpWebResponse,EasyHttp.RequestObject)">
            <summary>
            创建相应对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Bll.EasyHttpWebResponse.GetByte">
            <summary>
            获取相应的内容的字节数组信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:EasyHttp.Def.MethodDef">
            <summary>
            请求方法(常用)
            </summary>
        </member>
        <member name="F:EasyHttp.Def.MethodDef.GET">
            <summary>
            向特定的资源发出请求。
            </summary>
        </member>
        <member name="F:EasyHttp.Def.MethodDef.POST">
            <summary>
            向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST请求可能会导致新的资源的创建和/或已有资源的修改。 
            </summary>
        </member>
        <member name="F:EasyHttp.Def.MethodDef.PUT">
            <summary>
            向指定资源位置上传其最新内容。
            </summary>
        </member>
        <member name="F:EasyHttp.Def.MethodDef.PATCH">
            <summary>
            与PUT方法类似，但PATCH方法通常应用于局部更新。
            </summary>
        </member>
        <member name="F:EasyHttp.Def.MethodDef.DELETE">
            <summary>
            请求服务器删除Request-URI所标识的资源。 
            </summary>
        </member>
        <member name="T:EasyHttp.Def.RegexDef">
            <summary>
            正则表达式
            </summary>
        </member>
        <member name="F:EasyHttp.Def.RegexDef.Enconding">
            <summary>
            提取编码
            </summary>
        </member>
        <member name="T:EasyHttp.Def.RequestContentTypeDef">
            <summary>
            默认请求的ContentType
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:EasyHttp.Def.RequestContentTypeDef.FORM" -->
        <member name="F:EasyHttp.Def.RequestContentTypeDef.FORM_DATA">
            <summary>
            ajax之form上传
            使用表单上传文件时，必须指定表单的 enctype属性值为 multipart/form-data. 请求体被分割成多部分，每部分使用 --boundary分割
            </summary>
        </member>
        <member name="F:EasyHttp.Def.RequestContentTypeDef.JSON">
            <summary>
            ajax之json
            通过json的形式将数据发送给服务器
            </summary>
        </member>
        <member name="F:EasyHttp.Def.RequestContentTypeDef.XML">
            <summary>
            ajax之xml
            </summary>
        </member>
        <member name="F:EasyHttp.Def.RequestContentTypeDef.TEXT_HTML">
            <summary>
            常见的页面资源类型(请求html页面)
            </summary>
        </member>
        <member name="F:EasyHttp.Def.RequestContentTypeDef.TEXT_PLAIN">
            <summary>
            常见的页面资源类型(请求纯文本)
            </summary>
        </member>
        <member name="F:EasyHttp.Def.RequestContentTypeDef.TEXT_CSS">
            <summary>
            常见的页面资源类型(请求CSS)
            </summary>
        </member>
        <member name="F:EasyHttp.Def.RequestContentTypeDef.TEXT_JAVASCRIPT">
            <summary>
            常见的页面资源类型(请求javascript)
            </summary>
        </member>
        <member name="F:EasyHttp.Def.RequestContentTypeDef.IMAGE_JPEG">
            <summary>
            常见的页面资源类型(请求jpeg)
            </summary>
        </member>
        <member name="F:EasyHttp.Def.RequestContentTypeDef.IMAGE_PNG">
            <summary>
            常见的页面资源类型(请求png)
            </summary>
        </member>
        <member name="F:EasyHttp.Def.RequestContentTypeDef.IMAGE_GIF">
            <summary>
            常见的页面资源类型(请求gif)
            </summary>
        </member>
        <member name="F:EasyHttp.Def.UserAgentDef.Maxthon">
            <summary>
            遨游浏览器
            </summary>
        </member>
        <member name="F:EasyHttp.Def.UserAgentDef.Sougou">
            <summary>
            搜狗浏览器
            </summary>
        </member>
        <member name="F:EasyHttp.Def.UserAgentDef.Qi360">
            <summary>
            360浏览器
            </summary>
        </member>
        <member name="F:EasyHttp.Def.UserAgentDef.Qq">
            <summary>
            QQ浏览器
            </summary>
        </member>
        <member name="M:EasyHttp.EasyHtmlHelper.RemoveComment(System.String)">
            <summary>
            移除注释
            </summary>
            <param name="html">原始html</param>
            <returns>新的html</returns>
        </member>
        <member name="M:EasyHttp.EasyHtmlHelper.RemoveStyle(System.String)">
            <summary>
            移除样式代码
            </summary>
            <param name="html">原始html</param>
            <returns>新的html</returns>
        </member>
        <member name="M:EasyHttp.EasyHtmlHelper.RemoveScript(System.String)">
            <summary>
            移除脚本代码
            </summary>
            <param name="html">原始html</param>
            <returns>新的html</returns>
        </member>
        <member name="T:EasyHttp.EasyRequest">
            <summary>
            http请求类
            </summary>
        </member>
        <member name="M:EasyHttp.EasyRequest.CreateRequest(EasyHttp.RequestObject)">
            <summary>
            创建请求对象
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.EasyRequest.OnRemoteCertificateValidationCallback(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            忽略证书认证错误处理的函数
            </summary>
            <param name="sender"></param>
            <param name="certificate"></param>
            <param name="chain"></param>
            <param name="sslPolicyErrors"></param>
            <returns></returns>
        </member>
        <member name="T:EasyHttp.Enum.AType">
            <summary>
            A链类型
            </summary>
        </member>
        <member name="F:EasyHttp.Enum.AType.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="F:EasyHttp.Enum.AType.Img">
            <summary>
            图片
            </summary>
        </member>
        <member name="T:EasyHttp.Enum.CookieType">
            <summary>
            cookie类型
            </summary>
        </member>
        <member name="F:EasyHttp.Enum.CookieType.String">
            <summary>
            字符串
            </summary>
        </member>
        <member name="F:EasyHttp.Enum.CookieType.CookieCollection">
            <summary>
            链表
            </summary>
        </member>
        <member name="F:EasyHttp.Enum.CookieType.CookieContainer">
            <summary>
            容器
            </summary>
        </member>
        <member name="T:EasyHttp.Enum.PostDataType">
            <summary>
            post数据类型
            </summary>
        </member>
        <member name="F:EasyHttp.Enum.PostDataType.String">
            <summary>
            字符串
            </summary>
        </member>
        <member name="F:EasyHttp.Enum.PostDataType.Byte">
            <summary>
            字节数组
            </summary>
        </member>
        <member name="F:EasyHttp.Enum.PostDataType.FilePath">
            <summary>
            文件
            </summary>
        </member>
        <member name="T:EasyHttp.Exceptions.EasyHttpException">
            <summary>
            EasyHttp异常
            </summary>
        </member>
        <member name="P:EasyHttp.Json.DatetimeJsonConverter.DateTimeFormat">
            <summary>
            获取或设置DateTime格式
            <para>默认为: yyyy-MM-dd HH:mm:ss</para>
            </summary>
        </member>
        <member name="P:EasyHttp.Json.DatetimeNullJsonConverter.DateTimeFormat">
            <summary>
            获取或设置DateTime格式
            <para>默认为: yyyy-MM-dd HH:mm:ss</para>
            </summary>
        </member>
        <member name="T:EasyHttp.Json.KeepJsonNamingPolicy">
            <summary>
            保持和原属性名称大小写相同的名称
            </summary>
        </member>
        <member name="M:EasyHttp.Json.KeepJsonNamingPolicy.ConvertName(System.String)">
            <summary>
            转换名称 直接返回原名称
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:EasyHttp.Model.ContentTypeItem.Name">
            <summary>
            后缀名
            </summary>
        </member>
        <member name="P:EasyHttp.Model.ContentTypeItem.TypeValue">
            <summary>
            ContentType
            </summary>
        </member>
        <member name="T:EasyHttp.Model.DemainModel">
            <summary>
            域名对象
            </summary>
        </member>
        <member name="P:EasyHttp.Model.DemainModel.Title">
            <summary>
            http / https
            </summary>
        </member>
        <member name="P:EasyHttp.Model.DemainModel.Demain">
            <summary>
            域名
            </summary>
        </member>
        <member name="P:EasyHttp.Model.DemainModel.Port">
            <summary>
            端口
            </summary>
        </member>
        <member name="M:EasyHttp.Model.DemainModel.GetUrl">
            <summary>
            获取url
            </summary>
            <returns></returns>
        </member>
        <member name="T:EasyHttp.Model.FormItemModel">
            <summary>
            表单数据项
            </summary>
        </member>
        <member name="P:EasyHttp.Model.FormItemModel.Key">
            <summary>
            表单键，request["key"]
            </summary>
        </member>
        <member name="P:EasyHttp.Model.FormItemModel.Value">
            <summary>
            表单值,上传文件时忽略，request["key"].value
            </summary>
        </member>
        <member name="P:EasyHttp.Model.FormItemModel.IsFile">
            <summary>
            是否是文件
            </summary>
        </member>
        <member name="P:EasyHttp.Model.FormItemModel.FileName">
            <summary>
            上传的文件名
            </summary>
        </member>
        <member name="P:EasyHttp.Model.FormItemModel.FileContent">
            <summary>
            上传的文件内容
            </summary>
        </member>
        <member name="T:EasyHttp.Model.PostNameAttribute">
            <summary>
            post名称特性
            </summary>
        </member>
        <member name="P:EasyHttp.Model.PostNameAttribute.PostName">
            <summary>
            名称
            </summary>
        </member>
        <member name="T:EasyHttp.Model.TagA">
            <summary>
            A标签
            </summary>
        </member>
        <member name="P:EasyHttp.Model.TagA.Href">
            <summary>
            连接地址
            </summary>
        </member>
        <member name="P:EasyHttp.Model.TagA.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:EasyHttp.Model.TagA.Img">
            <summary>
            图片（文本标签为空）
            </summary>
        </member>
        <member name="P:EasyHttp.Model.TagA.Type">
            <summary>
            标签类型
            </summary>
        </member>
        <member name="T:EasyHttp.Model.TagAttr">
            <summary>
            标签属性
            </summary>
        </member>
        <member name="P:EasyHttp.Model.TagAttr.Name">
            <summary>
            属性名称
            </summary>
        </member>
        <member name="P:EasyHttp.Model.TagAttr.Value">
            <summary>
            属性值
            </summary>
        </member>
        <member name="T:EasyHttp.Model.TagBase">
            <summary>
            标签基类
            </summary>
        </member>
        <member name="P:EasyHttp.Model.TagBase.Html">
            <summary>
            html
            </summary>
        </member>
        <member name="P:EasyHttp.Model.TagBase.Node">
            <summary>
            当前元素
            </summary>
        </member>
        <member name="P:EasyHttp.Model.TagBase.TagName">
            <summary>
            标签名称
            </summary>
        </member>
        <member name="P:EasyHttp.Model.TagBase.Id">
            <summary>
            标签id
            </summary>
        </member>
        <member name="P:EasyHttp.Model.TagBase.Name">
            <summary>
            标签属性Name
            </summary>
        </member>
        <member name="P:EasyHttp.Model.TagBase.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:EasyHttp.Model.TagBase.InnerText">
            <summary>
            内部文本
            </summary>
        </member>
        <member name="P:EasyHttp.Model.TagBase.InnerHtml">
            <summary>
            内部Html
            </summary>
        </member>
        <member name="M:EasyHttp.Model.TagBase.GetAttrByName(System.String)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Model.TagBase.#ctor(HtmlAgilityPack.HtmlNode)">
            <summary>
            构造方法
            </summary>
            <param name="node">HtmlNode</param>
        </member>
        <member name="M:EasyHttp.Model.TagBase.#ctor(System.String)">
            <summary>
            构造方法
            </summary>
            <param name="html">html</param>
        </member>
        <member name="M:EasyHttp.Model.TagBase.IniNode(HtmlAgilityPack.HtmlNode)">
            <summary>
            初始化node
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:EasyHttp.Model.TagBase.IniHtml(System.String)">
            <summary>
            初始化html
            </summary>
            <param name="html"></param>
        </member>
        <member name="M:EasyHttp.Model.TagBase.GetChildNodes">
            <summary>
            获取子标签
            </summary>
            <returns></returns>
        </member>
        <member name="T:EasyHttp.Model.TagImg">
            <summary>
            Img标签
            </summary>
        </member>
        <member name="P:EasyHttp.Model.TagImg.Src">
            <summary>
            图片url
            </summary>
        </member>
        <member name="T:EasyHttp.Model.TagType">
            <summary>
            标签类型
            </summary>
        </member>
        <member name="F:EasyHttp.Model.TagType.none">
            <summary>
            没有明确指定标签
            </summary>
        </member>
        <member name="T:EasyHttp.RequestObject">
            <summary>
            请求信息
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.Url">
            <summary>
            请求的地址
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.IPEndPoint">
            <summary>
            本地的请求ip和端口
            </summary>
        </member>
        <member name="F:EasyHttp.RequestObject._automaticDecompression">
            <summary>
            自动解压缩方式
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.AutomaticDecompression">
            <summary>
            自动解压缩方式
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.CertificateList">
            <summary>
            证书链表
            </summary>
        </member>
        <member name="F:EasyHttp.RequestObject._headers">
            <summary>
            请求头
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.Headers">
            <summary>
            请求头
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.ProxyIp">
            <summary>
            代理ip 格式192.168.1.1:9999
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.ProxyUserName">
            <summary>
            代理用户名
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.ProxyPassword">
            <summary>
            代理密码
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.WebProxy">
            <summary>
            自定义代理
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.ProtocolVersion">
            <summary>
            用于请求的 HTTP 版本。 默认值为 Version11
            使用 HttpVersion 类的 Version10 和 Version11 字段
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.Expect100Continue">
            <summary>
            该值确定是否使用 100-Continue 行为。
            如果 POST 请求需要 100-Continue 响应，则为 true；否则为 false。 默认值为 true。
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.Method">
            <summary>
            获取或设置请求的方法
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.Timeout">
            <summary>
            获取或设置 System.Net.HttpWebRequest.GetResponse 和 System.Net.HttpWebRequest.GetRequestStream
            方法的超时值（以毫秒为单位）。
            请求超时前等待的毫秒数。默认值是 100,000 毫秒（100 秒）。
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.KeepAlive">
            <summary>
            获取或设置一个值，该值指示是否与 Internet 资源建立持续型连接。
            如果对 Internet 资源的请求所包含的 HTTP Connection 标头带有 Keep-alive 这一值，则为 true；否则为 false。
            默认值为 true。
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.ReadWriteTimeout">
            <summary>
            获取或设置写入或读取流时的超时（以毫秒为单位）。
            在写入超时或读取超时之前的毫秒数。默认值为 300,000 毫秒（5 分钟）。
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.Host">
            <summary>
            获取或设置要在 HTTP 请求中独立于请求 URI 使用的 Host 标头值。
            HTTP 请求中的 Host 标头值。
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.IfModifiedSince">
            <summary>
            获取或设置 If-Modified-Since HTTP 标头的值。
            包含 HTTP If-Modified-Since 标头内容的 System.DateTime。 默认值是当前日期和时间。
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.Accept">
            <summary>
            获取或设置 Accept HTTP 标头的值。
            Accept HTTP 标头的值。 
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.ContentType">
            <summary>
            获取或设置 Content-type HTTP 标头的值。
            Content-type HTTP 标头的值。 
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.UserAgent">
            <summary>
            用户代理
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.Encoding">
            <summary>
            采用指定的编码解析数据（如果不设则根据相应数据来自动适配编码）
            </summary>  
        </member>
        <member name="P:EasyHttp.RequestObject.PostEncoding">
            <summary>
            post编码
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.ICredentials">
            <summary>
            获取或设置请求的身份验证信息。
            包含与该请求关联的身份验证凭据的 System.Net.ICredentials。
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.CookieType">
            <summary>
            cookie类型
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.Cookie">
            <summary>
            字符串Cookie
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.CookieCollection">
            <summary>
            cookie链表
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.CookieContainer">
            <summary>
            cookie容器
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.Referer">
            <summary>
            请求来源,比如是从百度跳转及为http://www.baidu.com 默认值为 null。
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.AllowAutoRedirect">
            <summary>
            获取或设置一个值，该值指示请求是否应跟随重定向响应。
            如果请求应自动遵循来自 Internet 资源的重定向响应，则为 true；否则为 false。 默认值为 true。
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.MaximumAutomaticRedirections">
            <summary>
            获取或设置请求将跟随的重定向的最大数目。
            请求将跟随的重定向响应的最大数目。 默认值为 50。
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.Payload">
            <summary>
            请求负载
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.ConnectionLimit">
            <summary>
            允许最大连接数
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.SecurityProtocol">
            <summary>
            获取或设置由 System.Net.ServicePointManager 对象管理的 System.Net.ServicePoint 对象所使用的安全协议。
            </summary>
        </member>
        <member name="P:EasyHttp.RequestObject.IsUpdateCookie">
            <summary>
            是否更新cookie
            </summary>
        </member>
        <member name="M:EasyHttp.RequestObject.SetCertificate(System.String,System.String)">
            <summary>
            设置证书
            </summary>
            <param name="path">证书路径</param>
            <param name="password">密码</param>
        </member>
        <member name="M:EasyHttp.RequestObject.AddCertificate(System.String,System.String)">
            <summary>
            添加证书
            </summary>
            <param name="path">证书路径</param>
            <param name="password">密码</param>
        </member>
        <member name="M:EasyHttp.RequestObject.SetPayload(System.String)">
            <summary>
            设置请求负载
            </summary>
            <param name="value">请求内容</param>
        </member>
        <member name="M:EasyHttp.RequestObject.SetPayload(System.Byte[])">
            <summary>
            设置请求负载
            </summary>
            <param name="value">请求内容</param>
        </member>
        <member name="M:EasyHttp.RequestObject.SetPayloadFilePath(System.String)">
            <summary>
            设置请求负载
            </summary>
            <param name="filePath">文件路径</param>
        </member>
        <member name="M:EasyHttp.RequestObject.SetPayloadByPostFormData(System.Collections.Generic.List{EasyHttp.Model.FormItemModel})">
            <summary>
            设置请求负载(form-data模式，上传文件)
            </summary>
            <param name="formItems">文件字段</param>
        </member>
        <member name="M:EasyHttp.RequestObject.SetPayloadByPostFormUrlencoded``1(``0)">
            <summary>
            设置请求负载(application/x-www-form-urlencoded模式)
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="model">上传对象</param>
        </member>
        <member name="M:EasyHttp.RequestObject.AddCertificatePrivate(System.String,System.String)">
            <summary>
            添加证书
            </summary>
            <param name="path"></param>
            <param name="password"></param>
        </member>
        <member name="T:EasyHttp.ResponseObject">
            <summary>
            相应对象
            </summary>
        </member>
        <member name="F:EasyHttp.ResponseObject._requestObject">
            <summary>
            请求参数对象
            </summary>
        </member>
        <member name="P:EasyHttp.ResponseObject.RequestObject">
            <summary>
            请求参数对象
            </summary>
        </member>
        <member name="F:EasyHttp.ResponseObject._encoding">
            <summary>
            数据编码
            </summary>
        </member>
        <member name="P:EasyHttp.ResponseObject.CharacterSet">
            <summary>
            文档字符编码
            </summary>
        </member>
        <member name="P:EasyHttp.ResponseObject.StatusCode">
            <summary>
            HTTP 状态代码的值
            </summary>
        </member>
        <member name="P:EasyHttp.ResponseObject.ResponseUri">
            <summary>
            相应url
            </summary>
        </member>
        <member name="P:EasyHttp.ResponseObject.StatusDescription">
            <summary>
            状态描述
            </summary>
        </member>
        <member name="P:EasyHttp.ResponseObject.Headers">
            <summary>
            相应头
            </summary>
        </member>
        <member name="P:EasyHttp.ResponseObject.CookieCollection">
            <summary>
            相应Cookies
            </summary>
        </member>
        <member name="P:EasyHttp.ResponseObject.Cookie">
            <summary>
            相应Cookie
            </summary>
        </member>
        <member name="F:EasyHttp.ResponseObject._originalByteData">
            <summary>
            相应原始数据
            </summary>
        </member>
        <member name="P:EasyHttp.ResponseObject.OriginalByteData">
            <summary>
            相应原始数据
            </summary>
        </member>
        <member name="F:EasyHttp.ResponseObject._htmlOriginal">
            <summary>
            原始的html数据
            </summary>
        </member>
        <member name="F:EasyHttp.ResponseObject._htmlSimple">
            <summary>
            简化后的html串
            </summary>
        </member>
        <member name="M:EasyHttp.ResponseObject.SetEncoding(System.Byte[])">
            <summary>
            设定解析数据的编码
            </summary>
            <param name="ResponseByte">相应数据</param>
        </member>
        <member name="M:EasyHttp.ResponseObject.GetByteData">
            <summary>
            获取字节数组数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.ResponseObject.GetHtml">
            <summary>
            获取字符串数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.ResponseObject.GetHtmlSimple">
            <summary>
            获取简化字符串数据（去除注释、style、script）
            </summary>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.ResponseObject.GetTagById(System.String)">
            <summary>
            根据元素id获取标签
            </summary>
            <param name="id">id</param>
            <returns>选择的标签</returns>
        </member>
        <member name="M:EasyHttp.ResponseObject.GetAllATag">
            <summary>
            获取所有A标签
            </summary>
            <returns>选择的元素</returns>
        </member>
        <member name="M:EasyHttp.ResponseObject.GetAllImgTag">
            <summary>
            获取所有img标签
            </summary>
            <returns>选择的元素</returns>
        </member>
        <member name="T:EasyHttp.Tool.Base64Helper">
            <summary>
            Base64帮助类
            </summary>
        </member>
        <member name="M:EasyHttp.Tool.Base64Helper.EncodeBase64(System.String,System.Text.Encoding)">
            <summary>
            将字符串编码为base64
            </summary>
            <param name="source">原始字符串</param>
            <param name="encoding">字符编码</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.Base64Helper.DecodeBase64(System.String,System.Text.Encoding)">
            <summary>
            将base64转为字符串
            </summary>
            <param name="base64">字符编码</param>
            <param name="encoding">原始字符串</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.Base64Helper.EncodeBase64In(System.String,System.Text.Encoding)">
            <summary>
            将字符串编码为base64
            </summary>
            <param name="source">原始字符串</param>
            <param name="encoding">字符编码</param>
            <returns></returns>
        </member>
        <member name="T:EasyHttp.Tool.ConnectorHelper">
            <summary>
            接口帮助类
            </summary>
        </member>
        <member name="M:EasyHttp.Tool.ConnectorHelper.GetDemain(System.String)">
            <summary>
            获取域名
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.ConnectorHelper.GetDomainIP(System.String)">
            <summary>
            获取域名
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.ContentTypeHelper.GetContentTypeByNameIn(System.String)">
            <summary>
            获取contentType
            </summary>
            <param name="fileName">文件名称</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.ContentTypeHelper.GetContentTypeByName(System.String)">
            <summary>
            获取contentType
            </summary>
            <param name="fileName">文件名称</param>
            <returns></returns>
        </member>
        <member name="T:EasyHttp.Tool.CookieCache">
            <summary>
            cookie缓存
            </summary>
        </member>
        <member name="M:EasyHttp.Tool.CookieCache.SetCookie(System.String,System.String,System.String)">
            <summary>
            设置cookie
            </summary>
            <param name="cookie"></param>
            <param name="demainUrl">现勘系统登录地址域</param>
            <param name="userNo">登录用户名</param>
        </member>
        <member name="M:EasyHttp.Tool.CookieCache.ClearText(System.String)">
            <summary>
            清空文本
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:EasyHttp.Tool.CookieCache.GetCookie(System.String,System.String)">
            <summary>
            获取cookie
            </summary>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.CookieCache.DeleteCookie(System.String,System.String)">
            <summary>
            删除cookie
            </summary>
            <param name="demainUrl">域名</param>
            <param name="userNo">用户名</param>
        </member>
        <member name="M:EasyHttp.Tool.CookieCache.GetFileName(System.String,System.String)">
            <summary>
            文件名称
            </summary>
            <param name="demainUrl">url域</param>
            <param name="userNo">用户名</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EasyStringHelper.EasyTrimExIn(System.String)">
            <summary>
            去除空格
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EasyStringHelper.EasyTrimEx(System.String)">
            <summary>
            去除空格
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="T:EasyHttp.Tool.EhBusinessStatic">
            <summary>
            业务静态类
            </summary>
        </member>
        <member name="P:EasyHttp.Tool.EhBusinessStatic.BusinessName">
            <summary>
            实现业务的名称
            </summary>
        </member>
        <member name="M:EasyHttp.Tool.EhBusinessStatic.SetBusinessName(System.String)">
            <summary>
            设置实现业务的名称
            </summary>
            <param name="businessName">业务的名称</param>
        </member>
        <member name="T:EasyHttp.Tool.EhConvert">
            <summary>
            转换工具
            </summary>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.GetNoNullString(System.Object)">
            <summary>
            返回字符串
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.GetNoNullInt(System.Object,System.Int32)">
            <summary>
            返回整数型
            </summary>
            <param name="obj"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.GetNoNullDateTime(System.Object,System.DateTime)">
            <summary>
            返回时间
            </summary>
            <param name="obj"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.GetNoNullDecimal(System.Object,System.Decimal)">
            <summary>
            返回小数型
            </summary>
            <param name="obj"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.GetNoNullBool(System.Object,System.Boolean)">
            <summary>
            返回逻辑型
            </summary>
            <param name="obj"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.ConvertTo``1(System.Object)">
            <summary>
            将一个类型转换为另一个类型。
            </summary>
            <typeparam name="TValue">输出的类型。</typeparam>
            <param name="value">要转换的值。</param>
            <returns>返回 <see cref="!:TValue" /></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.ConvertTo(System.Type,System.Object)">
             <summary>
            
             </summary>
             <param name="type"></param>
             <param name="value"></param>
             <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.ObjectToBool(System.Object)">
            <summary>
            object型转换为bool型
            </summary>
            <param name="obj">要转换的对象</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的bool类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.ObjectToBool(System.Object,System.Boolean)">
            <summary>
            object型转换为bool型
            </summary>
            <param name="obj">要转换的对象</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的bool类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.StrToBool(System.String)">
            <summary>
            string型转换为bool型
            </summary>
            <param name="str">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的bool类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.StrToBool(System.String,System.Boolean)">
            <summary>
            string型转换为bool型
            </summary>
            <param name="str">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的bool类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.BoolToStr(System.Boolean)">
            <summary>
                        bool型转换为string型
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.ObjectToInt(System.Object)">
            <summary>
            将对象转换为Int32类型
            </summary>
            <param name="obj">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.ObjectToInt(System.Object,System.Int32)">
            <summary>
            将对象转换为Int32类型
            </summary>
            <param name="obj">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.ObjectToLong(System.Object)">
            <summary>
            将对象转换为long类型
            </summary>
            <param name="obj">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的long类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.ObjectToLong(System.Object,System.Int64)">
            <summary>
            将对象转换为long类型
            </summary>
            <param name="obj">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的long类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.StrToInt(System.String)">
            <summary>
            将字符转换为Int32类型,转换失败返回0
            </summary>
            <param name="str">要转换的字符串</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.StrToLong(System.String)">
            <summary>
            将字符转换为long类型,转换失败返回0
            </summary>
            <param name="str">要转换的字符串</param>
            <returns>转换后的long类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.StrToInt(System.String,System.Int32)">
            <summary>
            将对象转换为Int32类型
            </summary>
            <param name="str">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.StrToLong(System.String,System.Int64)">
            <summary>
            将对象转换为Long类型
            </summary>
            <param name="str">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的long类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.ObjectToNullabelInt(System.Object)">
            <summary>
            将对象转换为Int32类型
            </summary>
            <param name="obj">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.StrToNullabelInt(System.String)">
            <summary>
            将对象转换为Int32类型
            </summary>
            <param name="str">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.ObjectToNullabelLong(System.Object)">
            <summary>
            将对象转换为long类型
            </summary>
            <param name="obj">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的long类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.StrToNullabelLong(System.String)">
            <summary>
            将对象转换为long类型
            </summary>
            <param name="str">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的long类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.ObjectToFloat(System.Object)">
            <summary>
            对象型转换为float型
            </summary>
            <param name="obj">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.ObjectToFloat(System.Object,System.Single)">
            <summary>
            对象型转换为float型
            </summary>
            <param name="obj">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.StrToFloat(System.String)">
            <summary>
            string型转换为Double型
            </summary>
            <param name="str">要转换的字符串</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.StrToFloat(System.String,System.Single)">
            <summary>
            string型转换为float型
            </summary>
            <param name="str">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.ObjectToNullabelFloat(System.Object)">
            <summary>
            string型转换为float型
            </summary>
            <param name="obj">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.StrToNullabelFloat(System.String)">
            <summary>
            string型转换为float型
            </summary>
            <param name="str">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.ObjectToDouble(System.Object)">
            <summary>
            object型转换为Double型
            </summary>
            <param name="obj">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的Double类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.ObjectToDouble(System.Object,System.Double)">
            <summary>
            object型转换为Double型
            </summary>
            <param name="obj">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的Double类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.StrToDouble(System.String)">
            <summary>
            string型转换为Double型
            </summary>
            <param name="str">要转换的字符串</param>
            <returns>转换后的Double类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.StrToDouble(System.String,System.Double)">
            <summary>
            string型转换为float型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.ObjectToNullabelDouble(System.Object)">
            <summary>
            string型转换为float型
            </summary>
            <param name="obj">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.StrToNullabelDouble(System.String)">
            <summary>
            string型转换为float型
            </summary>
            <param name="str">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.GetDateTimeBeginByAdminLTE(System.String)">
            <summary>
            获取开始日期
            </summary>
            <param name="strDateTimeRange">选择的日期范围</param>
            <returns>开始日期</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.GetDateTimeEndByAdminLTE(System.String)">
            <summary>
            获取结束日期
            </summary>
            <param name="strDateTimeRange">选择的日期范围</param>
            <returns>开始日期</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.GetNoNullDouble(System.Object,System.Double)">
            <summary>
            返回Double
            </summary>
            <param name="obj"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.GetNoNullDouble(System.Object)">
            <summary>
            返回Double
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhConvert.GetNullabelDouble(System.Object)">
            <summary>
            返回Double
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:EasyHttp.Tool.EhLog">
            <summary>
            日志对象
            </summary>
        </member>
        <member name="F:EasyHttp.Tool.EhLog._lockHelper">
            <summary>
            锁对象
            </summary>
        </member>
        <member name="M:EasyHttp.Tool.EhLog.WriteErrorLogTxt(System.String)">
            <summary>
            法描述：写错误日志。
            </summary>
            <param name="strContent"></param>
        </member>
        <member name="M:EasyHttp.Tool.EhLog.WriteDebugLogTxt(System.String)">
            <summary>
            法描述：写Debug日志。
            </summary>
            <param name="strContent"></param>
        </member>
        <member name="M:EasyHttp.Tool.EhLog.WriteWarningLogTxt(System.String)">
            <summary>
            法描述：写Warning日志。
            </summary>
            <param name="strContent"></param>
        </member>
        <member name="M:EasyHttp.Tool.EhLog.WriteInfoLogTxt(System.String)">
            <summary>
            法描述：写Info日志。
            </summary>
            <param name="strContent"></param>
        </member>
        <member name="M:EasyHttp.Tool.EhLog.WriteExceptionLogTxt(System.String)">
            <summary>
            法描述：写Info日志。
            </summary>
            <param name="strContent"></param>
        </member>
        <member name="M:EasyHttp.Tool.EhLog.WriteRefreshRunLogTxt(System.String)">
            <summary>
            法描述：写Info日志。
            </summary>
            <param name="strContent"></param>
        </member>
        <member name="M:EasyHttp.Tool.EhLog.WriteDebugLog(System.String)">
            <summary>
            调试
            </summary>
            <param name="strContent"></param>
        </member>
        <member name="M:EasyHttp.Tool.EhLog.WriteErrorLog(System.String)">
            <summary>
            错误
            </summary>
            <param name="strContent"></param>
        </member>
        <member name="M:EasyHttp.Tool.EhLog.WriteWarningLog(System.String)">
            <summary>
            警告
            </summary>
            <param name="strContent"></param>
        </member>
        <member name="M:EasyHttp.Tool.EhLog.WriteInfoLog(System.String)">
            <summary>
            普通信息
            </summary>
            <param name="strContent"></param>
        </member>
        <member name="M:EasyHttp.Tool.EhLog.WriteExceptionLog(System.Exception)">
            <summary>
            异常
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:EasyHttp.Tool.EhLog.WriteExceptionLog(System.Exception,System.String)">
            <summary>
            异常
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:EasyHttp.Tool.EhLog.WriteRefreshRunLog(System.String)">
            <summary>
            异常
            </summary>
            <param name="ex"></param>
        </member>
        <member name="T:EasyHttp.Tool.EhMd5">
            <summary>
            MD5帮助类
            </summary>
        </member>
        <member name="M:EasyHttp.Tool.EhMd5.GetMd5(System.String)">
            <summary>
            MD5加密
            </summary>
            <param name="content">加密内容</param>
            <returns>经过加密后的MD5字符</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhMd5.GetMd5(System.Byte[])">
            <summary>
            MD5加密
            </summary>
            <param name="content">加密内容</param>
            <returns>经过加密后的MD5字节</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhMd5.GetMd5FromFile(System.String)">
            <summary>
            获取文件MD5值
            </summary>
            <param name="fileName">文件绝对路径</param>
            <returns>MD5值</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhMd5.Compare(System.String,System.String)">
            <summary>
            比较内容是否一致
            </summary>
            <param name="contentA">比较的内容</param>
            <param name="contentB">比较的内容</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhMd5.Compare(System.Byte[],System.Byte[])">
            <summary>
            比较内容是否一致
            </summary>
            <param name="contentA">比较的内容</param>
            <param name="contentB">比较的内容</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhMd5.GetMd5In(System.String)">
            <summary>
            MD5加密
            </summary>
            <param name="content">加密内容</param>
            <returns>经过加密后的MD5字符</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhMd5.GetMd5FromFileIn(System.String)">
            <summary>
            获取文件MD5值
            </summary>
            <param name="fileName">文件绝对路径</param>
            <returns>MD5值</returns>
        </member>
        <member name="F:EasyHttp.Tool.EhTool.AssemblyFileVersion">
            <summary>
            程序集文件版本
            </summary>
        </member>
        <member name="P:EasyHttp.Tool.EhTool.Monthes">
            <summary>
            根据阿拉伯数字返回月份的名称(可更改为某种语言)
            </summary>	
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetRegexCompiledOptions">
            <summary>
            得到正则编译参数设置
            </summary>
            <returns>参数设置</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetStringLength(System.String)">
            <summary>
            返回字符串真实长度, 1个汉字长度为2
            </summary>
            <returns>字符长度</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetInArrayID(System.String,System.String[],System.Boolean)">
            <summary>
            判断指定字符串在指定字符串数组中的位置
            </summary>
            <param name="strSearch">字符串</param>
            <param name="stringArray">字符串数组</param>
            <param name="caseInsensetive">是否不区分大小写, true为不区分, false为区分</param>
            <returns>字符串在指定字符串数组中的位置, 如不存在则返回-1</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetInArrayID(System.String,System.String[])">
            <summary>
            判断指定字符串在指定字符串数组中的位置
            </summary>
            <param name="strSearch">字符串</param>
            <param name="stringArray">字符串数组</param>
            <returns>字符串在指定字符串数组中的位置, 如不存在则返回-1</returns>		
        </member>
        <member name="M:EasyHttp.Tool.EhTool.InArray(System.String,System.String[],System.Boolean)">
            <summary>
            判断指定字符串是否属于指定字符串数组中的一个元素
            </summary>
            <param name="strSearch">字符串</param>
            <param name="stringArray">字符串数组</param>
            <param name="caseInsensetive">是否不区分大小写, true为不区分, false为区分</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.InArray(System.String,System.String[])">
            <summary>
            判断指定字符串是否属于指定字符串数组中的一个元素
            </summary>
            <param name="str">字符串</param>
            <param name="stringarray">字符串数组</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.InArray(System.String,System.String)">
            <summary>
            判断指定字符串是否属于指定字符串数组中的一个元素
            </summary>
            <param name="str">字符串</param>
            <param name="stringarray">内部以逗号分割单词的字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.InArray(System.String,System.String,System.String)">
            <summary>
            判断指定字符串是否属于指定字符串数组中的一个元素
            </summary>
            <param name="str">字符串</param>
            <param name="stringarray">内部以逗号分割单词的字符串</param>
            <param name="strsplit">分割字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.InArray(System.String,System.String,System.String,System.Boolean)">
            <summary>
            判断指定字符串是否属于指定字符串数组中的一个元素
            </summary>
            <param name="str">字符串</param>
            <param name="stringarray">内部以逗号分割单词的字符串</param>
            <param name="strsplit">分割字符串</param>
            <param name="caseInsensetive">是否不区分大小写, true为不区分, false为区分</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.RTrim(System.String)">
            <summary>
            删除字符串尾部的回车/换行/空格
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.ClearBR(System.String)">
            <summary>
            清除给定字符串中的回车及换行符
            </summary>
            <param name="str">要清除的字符串</param>
            <returns>清除后返回的字符串</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.CutString(System.String,System.Int32,System.Int32)">
            <summary>
            从字符串的指定位置截取指定长度的子字符串
            </summary>
            <param name="str">原字符串</param>
            <param name="startIndex">子字符串的起始位置</param>
            <param name="length">子字符串的长度</param>
            <returns>子字符串</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.CutString(System.String,System.Int32)">
            <summary>
            从字符串的指定位置开始截取到字符串结尾的了符串
            </summary>
            <param name="str">原字符串</param>
            <param name="startIndex">子字符串的起始位置</param>
            <returns>子字符串</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetRootMapPath(System.String)">
            <summary>
            获得当前绝对路径--从跟节点找即 ~/
            </summary>
            <param name="strPath">指定的路径</param>
            <returns>绝对路径</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.FileExists(System.String)">
            <summary>
            返回文件是否存在
            </summary>
            <param name="filename">文件名</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.IsImgFilename(System.String)">
            <summary>
            判断文件名是否为浏览器可以直接显示的图片文件名
            </summary>
            <param name="filename">文件名</param>
            <returns>是否可以直接显示</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.IntToStr(System.Int32)">
            <summary>
            int型转换为string型
            </summary>
            <returns>转换后的string类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.MD5(System.String)">
            <summary>
            MD5函数
            </summary>
            <param name="str">原始字符串</param>
            <returns>MD5结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.SHA256(System.String)">
            <summary>
            SHA256函数
            </summary>
            /// <param name="str">原始字符串</param>
            <returns>SHA256结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetSubString(System.String,System.Int32,System.String)">
            <summary>
            字符串如果操过指定长度则将超出的部分用指定字符串代替
            </summary>
            <param name="p_SrcString">要检查的字符串</param>
            <param name="p_Length">指定长度</param>
            <param name="p_TailString">用于替换的字符串</param>
            <returns>截取后的字符串</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetSubString(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            取指定长度的字符串
            </summary>
            <param name="p_SrcString">要检查的字符串</param>
            <param name="p_StartIndex">起始位置</param>
            <param name="p_Length">指定长度</param>
            <param name="p_TailString">用于替换的字符串</param>
            <returns>截取后的字符串</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.ReplaceString(System.String,System.String,System.String,System.Boolean)">
            <summary>
            自定义的替换字符串函数
            </summary>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetSpacesString(System.Int32)">
            <summary>
            生成指定数量的html空格符号
            </summary>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.IsValidEmail(System.String)">
            <summary>
            检测是否符合email格式
            </summary>
            <param name="strEmail">要判断的email字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.IsURL(System.String)">
            <summary>
            检测是否是正确的Url
            </summary>
            <param name="strUrl">要验证的Url</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.IsBase64String(System.String)">
            <summary>
            判断是否为base64字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.IsSafeSqlString(System.String)">
            <summary>
            检测是否有Sql危险字符
            </summary>
            <param name="str">要判断字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.IsSafeUserInfoString(System.String)">
            <summary>
            检测是否有危险的可能用于链接的字符串
            </summary>
            <param name="str">要判断字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.CleanInput(System.String)">
            <summary>
            清理字符串
            </summary>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetFilename(System.String)">
            <summary>
            返回URL中结尾的文件名
            </summary>		
        </member>
        <member name="M:EasyHttp.Tool.EhTool.StrFormat(System.String)">
            <summary>
            替换回车换行符为html换行符
            </summary>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetDate">
            <summary>
            返回标准日期格式string
            </summary>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetDate(System.String,System.String)">
            <summary>
            返回指定日期格式
            </summary>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetTime">
            <summary>
            返回标准时间格式string
            </summary>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetDateTime">
            <summary>
            返回标准时间格式string
            </summary>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetDateTime(System.Int32)">
            <summary>
            返回相对于当前时间的相对天数
            </summary>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetDateTimeF">
            <summary>
            返回标准时间格式string
            </summary>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.IsTime(System.String)">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.mashSQL(System.String)">
            <summary>
            改正sql语句中的转义字符
            </summary>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.ChkSQL(System.String)">
            <summary>
            替换sql语句中的有问题符号
            </summary>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.SplitString(System.String,System.String)">
            <summary>
            分割字符串
            </summary>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.SplitString(System.String,System.String,System.Int32)">
            <summary>
            分割字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.PadStringArray(System.String[],System.Int32,System.Int32)">
            <summary>
            过滤字符串数组中每个元素为合适的大小
            当长度小于minLength时，忽略掉,-1为不限制最小长度
            当长度大于maxLength时，取其前maxLength位
            如果数组中有null元素，会被忽略掉
            </summary>
            <param name="minLength">单个元素最小长度</param>
            <param name="maxLength">单个元素最大长度</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.SplitString(System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            分割字符串
            </summary>
            <param name="strContent">被分割的字符串</param>
            <param name="strSplit">分割符</param>
            <param name="ignoreRepeatItem">忽略重复项</param>
            <param name="maxElementLength">单个元素最大长度</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.SplitString(System.String,System.String,System.Boolean)">
            <summary>
            分割字符串
            </summary>
            <param name="strContent">被分割的字符串</param>
            <param name="strSplit">分割符</param>
            <param name="ignoreRepeatItem">忽略重复项</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.DistinctStringArray(System.String[],System.Int32)">
            <summary>
            清除字符串数组中的重复项
            </summary>
            <param name="strArray">字符串数组</param>
            <param name="maxElementLength">字符串数组中单个元素的最大长度</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.DistinctStringArray(System.String[])">
            <summary>
            清除字符串数组中的重复项
            </summary>
            <param name="strArray">字符串数组</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.EncodeHtml(System.String)">
            <summary>
            替换html字符
            </summary>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.StrFilter(System.String,System.String)">
            <summary>
            进行指定的替换(脏字过滤)
            </summary>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetStaticPageNumbers(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            获得伪静态页码显示链接
            </summary>
            <param name="curPage">当前页数</param>
            <param name="countPage">总页数</param>
            <param name="url">超级链接地址</param>
            <param name="extendPage">周边页码显示个数上限</param>
            <returns>页码html</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetStaticPageNumbers(System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            获得伪静态页码显示链接
            </summary>
            <param name="curPage">当前页数</param>
            <param name="countPage">总页数</param>
            <param name="url">超级链接地址</param>
            <param name="extendPage">周边页码显示个数上限</param>
            <param name="forumrewrite">当前版块是否使用URL重写</param>
            <returns>页码html</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetPostPageNumbers(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            获得帖子的伪静态页码显示链接
            </summary>
            <param name="expname"></param>
            <param name="countPage">总页数</param>
            <param name="url">超级链接地址</param>
            <param name="extendPage">周边页码显示个数上限</param>
            <returns>页码html</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetPageNumbers(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            获得页码显示链接
            </summary>
            <param name="curPage">当前页数</param>
            <param name="countPage">总页数</param>
            <param name="url">超级链接地址</param>
            <param name="extendPage">周边页码显示个数上限</param>
            <returns>页码html</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetPageNumbers(System.Int32,System.Int32,System.String,System.Int32,System.String)">
            <summary>
            获得页码显示链接
            </summary>
            <param name="curPage">当前页数</param>
            <param name="countPage">总页数</param>
            <param name="url">超级链接地址</param>
            <param name="extendPage">周边页码显示个数上限</param>
            <param name="pagetag">页码标记</param>
            <returns>页码html</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetPageNumbers(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String)">
            <summary>
            获得页码显示链接
            </summary>
            <param name="curPage">当前页数</param>
            <param name="countPage">总页数</param>
            <param name="url">超级链接地址</param>
            <param name="extendPage">周边页码显示个数上限</param>
            <param name="pagetag">页码标记</param>
            <param name="anchor">锚点</param>
            <returns>页码html</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.HtmlEncode(System.String)">
            <summary>
            返回 HTML 字符串的编码结果
            </summary>
            <param name="str">字符串</param>
            <returns>编码结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.HtmlDecode(System.String)">
            <summary>
            返回 HTML 字符串的解码结果
            </summary>
            <param name="str">字符串</param>
            <returns>解码结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.UrlEncode(System.String)">
            <summary>
            返回 URL 字符串的编码结果
            </summary>
            <param name="str">字符串</param>
            <returns>编码结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.UrlDecode(System.String)">
            <summary>
            返回 URL 字符串的编码结果
            </summary>
            <param name="str">字符串</param>
            <returns>解码结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.FindNoUTF8File(System.String)">
            <summary>
            返回指定目录下的非 UTF8 字符集文件
            </summary>
            <param name="Path">路径</param>
            <returns>文件名的字符串数组</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.IsUTF8(System.IO.FileStream)">
            <summary>
            判断文件流是否为UTF8字符集
            </summary>
            <param name="sbInputStream">文件流</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.FormatBytesStr(System.Int32)">
            <summary>
            格式化字节数字符串
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.SafeInt32(System.Object)">
            <summary>
            将long型数值转换为Int32类型
            </summary>
            <param name="objNum"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.StrDateDiffSeconds(System.String,System.Int32)">
            <summary>
            返回相差的秒数
            </summary>
            <param name="Time"></param>
            <param name="Sec"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.StrDateDiffMinutes(System.String,System.Int32)">
            <summary>
            返回相差的分钟数
            </summary>
            <param name="time"></param>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.StrDateDiffHours(System.String,System.Int32)">
            <summary>
            返回相差的小时数
            </summary>
            <param name="time"></param>
            <param name="hours"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.ReplaceStrToScript(System.String)">
            <summary>
            为脚本替换特殊字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.IsIP(System.String)">
            <summary>
            是否为ip
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.InIPArray(System.String,System.String[])">
            <summary>
            返回指定IP是否在指定的IP数组所限定的范围内, IP数组内的IP地址可以使用*表示该IP段任意, 例如192.168.1.*
            </summary>
            <param name="ip"></param>
            <param name="iparray"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetAssemblyVersion">
            <summary>
            获得Assembly版本号
            </summary>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetAssemblyProductName">
            <summary>
            获得Assembly产品名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetAssemblyCopyright">
            <summary>
            获得Assembly产品版权
            </summary>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.IsDateString(System.String)">
            <summary>
            判断字符串是否是yy-mm-dd字符串
            </summary>
            <param name="str">待判断字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.RemoveHtml(System.String)">
            <summary>
            移除Html标记
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.RemoveUnsafeHtml(System.String)">
            <summary>
            过滤HTML中的不安全标签
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.RemoveFontTag(System.String)">
            <summary>
            将用户组Title中的font标签去掉
            </summary>
            <param name="title">用户组Title</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.IsNumeric(System.Object)">
            <summary>
            判断对象是否为Int32类型的数字
            </summary>
            <param name="Expression"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetTextFromHTML(System.String)">
            <summary>
            从HTML中获取文本,保留br,p,img
            </summary>
            <param name="HTML"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.StrToBool(System.Object,System.Boolean)">
            <summary>
            object型转换为bool型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的bool类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.StrToBool(System.String,System.Boolean)">
            <summary>
            string型转换为bool型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的bool类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.ObjectToInt(System.Object,System.Int32)">
            <summary>
            将对象转换为Int32类型
            </summary>
            <param name="expression">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.StrToInt(System.String,System.Int32)">
            <summary>
            将字符串转换为Int32类型
            </summary>
            <param name="expression">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.ObjectToNullabelInt(System.Object)">
            <summary>
            将对象转换为Int32类型
            </summary>
            <param name="expression">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.StrToNullabelInt(System.String)">
            <summary>
            将对象转换为Int32类型
            </summary>
            <param name="expression">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.ObjectToFloat(System.Object,System.Single)">
            <summary>
            Object型转换为float型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.StrToFloat(System.String,System.Single)">
            <summary>
            string型转换为float型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.IsNumericArray(System.String[])">
            <summary>
            判断给定的字符串数组(strNumber)中的数据是不是都为数值型
            </summary>
            <param name="strNumber">要确认的字符串数组</param>
            <returns>是则返加true 不是则返回 false</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.IsInt(System.String)">
            <summary>
            验证是否为正整数
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.ClearLastChar(System.String)">
            <summary>
            删除最后一个字符
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.BackupFile(System.String,System.String,System.Boolean)">
            <summary>
            备份文件
            </summary>
            <param name="sourceFileName">源文件名</param>
            <param name="destFileName">目标文件名</param>
            <param name="overwrite">当目标文件存在时是否覆盖</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.BackupFile(System.String,System.String)">
            <summary>
            备份文件,当目标文件存在时覆盖
            </summary>
            <param name="sourceFileName">源文件名</param>
            <param name="destFileName">目标文件名</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.RestoreFile(System.String,System.String,System.String)">
            <summary>
            恢复文件
            </summary>
            <param name="backupFileName">备份文件名</param>
            <param name="targetFileName">要恢复的文件名</param>
            <param name="backupTargetFileName">要恢复文件再次备份的名称,如果为null,则不再备份恢复文件</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetTemplateCookieName">
            <summary>
            获取记录模板id的cookie名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.SBCCaseToNumberic(System.String)">
            <summary>
            将全角数字转换为数字
            </summary>
            <param name="SBCCase"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.ToColor(System.String)">
            <summary>
            将字符串转换为Color
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.ConvertSimpleFileName(System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            转换长文件名为短文件名
            </summary>
            <param name="filename"></param>
            <param name="repstring"></param>
            <param name="leftnum"></param>
            <param name="rightnum"></param>
            <param name="charnum"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.DataTableToJSON(System.Data.DataTable)">
            <summary>
            将数据表转换成JSON类型串
            </summary>
            <param name="dt">要转换的数据表</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.DataTableToJson(System.Data.DataTable,System.Boolean)">
            <summary>
            将数据表转换成JSON类型串
            </summary>
            <param name="dt">要转换的数据表</param>
            <param name="dispose">数据表转换结束后是否dispose掉</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.StrIsNullOrEmpty(System.String)">
            <summary>
            字段串是否为Null或为""(空)
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.IsNumericList(System.String)">
            <summary>
            是否为数值串列表，各数值间用","间隔
            </summary>
            <param name="numList"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.CheckColorValue(System.String)">
            <summary>
            检查颜色值是否为3/6位的合法颜色
            </summary>
            <param name="color">待检查的颜色</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetAjaxPageNumbers(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            获取ajax形式的分页链接
            </summary>
            <param name="curPage">当前页数</param>
            <param name="countPage">总页数</param>
            <param name="callback">回调函数</param>
            <param name="extendPage">周边页码显示个数上限</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetSourceTextByUrl(System.String)">
            <summary>
            根据Url获得源文件内容
            </summary>
            <param name="url">合法的Url地址</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.ConvertToUnixTimestamp(System.DateTime)">
            <summary>
            转换时间为unix时间戳
            </summary>
            <param name="date">需要传递UTC时间,避免时区误差,例:DataTime.UTCNow</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.JsonCharFilter(System.String)">
            <summary>
            Json特符字符过滤，参见http://www.json.org/
            </summary>
            <param name="sourceStr">要过滤的源字符串</param>
            <returns>返回过滤的字符串</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.MergeString(System.String,System.String)">
            <summary>
            合并字符
            </summary>
            <param name="source">要合并的源字符串</param>
            <param name="target">要被合并到的目的字符串</param>
            <param name="mergechar">合并符</param>
            <returns>合并到的目的字符串</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.MergeString(System.String,System.String,System.String)">
            <summary>
            合并字符
            </summary>
            <param name="source">要合并的源字符串</param>
            <param name="target">要被合并到的目的字符串</param>
            <param name="mergechar">合并符</param>
            <returns>并到字符串</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.ClearUBB(System.String)">
            <summary>
            清除UBB标签
            </summary>
            <param name="sDetail">帖子内容</param>
            <returns>帖子内容</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetFileExtName(System.String)">
            <summary>
            获取指定文件的扩展名
            </summary>
            <param name="fileName">指定文件名</param>
            <returns>扩展名</returns>
        </member>
        <member name="M:EasyHttp.Tool.EhTool.GetHttpWebResponse(System.String,System.String)">
            <summary>
            http POST请求url
            </summary>
            <param name="apiUrl"></param>
            <param name="method_name"></param>
            <param name="postData"></param>
            <returns></returns>
        </member>
        <member name="T:EasyHttp.Tool.JsonConvertTool">
            <summary>
            json转换
            </summary>
        </member>
        <member name="P:EasyHttp.Tool.JsonConvertTool.Option">
            <summary>
            配置项目
            </summary>
        </member>
        <member name="M:EasyHttp.Tool.JsonConvertTool.IniOption(System.Text.Json.JsonSerializerOptions)">
            <summary>
            初始化配置
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:EasyHttp.Tool.JsonConvertTool.JsonToObject``1(System.String)">
            <summary>
            转换为对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.JsonConvertTool.ObjectToJson(System.Object)">
            <summary>
            转换为json
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="T:EasyHttp.Tool.LocationHelper">
            <summary>
            位置帮助类
            </summary>
        </member>
        <member name="T:EasyHttp.Tool.PostHelper">
            <summary>
            post帮助类
            </summary>
        </member>
        <member name="M:EasyHttp.Tool.PostHelper.PostFormFile(EasyHttp.RequestObject,System.Collections.Generic.List{EasyHttp.Model.FormItemModel})">
            <summary>
            获取上传文件请求对象(form-data)
            </summary>
            <param name="reqObjTemp"></param>
            <param name="formItems">文件字段</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.PostHelper.GetFileContent(System.String)">
            <summary>
            获取文件byte数组
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.PostHelper.GetPostDataFormWwwUrlencoded``1(``0)">
            <summary>
            获取post请求数据(application/x-www-form-urlencoded模式)
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="model">上传对象</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.PostHelper.GetPostDataFormWwwUrlencodedIn``1(``0)">
            <summary>
            获取post请求数据(application/x-www-form-urlencoded模式)
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="model">上传对象</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.PostHelper.PostFormFileIn(EasyHttp.RequestObject,System.Collections.Generic.List{EasyHttp.Model.FormItemModel})">
            <summary>
            获取上传文件请求对象(form-data)
            </summary>
            <param name="reqObjTemp"></param>
            <param name="formItems">文件字段</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.PostHelper.GetFileContentIn(System.String)">
            <summary>
            获取文件byte数组
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="T:EasyHttp.Tool.TagHelper">
            <summary>
            标签帮助类
            </summary>
        </member>
        <member name="M:EasyHttp.Tool.TagHelper.GetTagListByAttrs``1(System.String,System.Collections.Generic.List{EasyHttp.Model.TagAttr})">
            <summary>
            根据多属性获取标签
            </summary>
            <typeparam name="T"></typeparam>
            <param name="html"></param>
            <param name="attrList">属性链表</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.TagHelper.GetTagListByAttrs``1(System.String,EasyHttp.Model.TagType,System.Collections.Generic.List{EasyHttp.Model.TagAttr})">
            <summary>
            根据多属性获取标签
            </summary>
            <typeparam name="T"></typeparam>
            <param name="html"></param>
            <param name="tagName"></param>
            <param name="attrList"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.TagHelper.GetTagByAttrs``1(System.String,System.Collections.Generic.List{EasyHttp.Model.TagAttr})">
            <summary>
            根据多属性获取标签
            </summary>
            <typeparam name="T"></typeparam>
            <param name="html"></param>
            <param name="attrList">属性链表</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.TagHelper.GetTagByAttrs``1(System.String,EasyHttp.Model.TagType,System.Collections.Generic.List{EasyHttp.Model.TagAttr})">
            <summary>
            根据多属性获取标签
            </summary>
            <typeparam name="T"></typeparam>
            <param name="html"></param>
            <param name="tagName"></param>
            <param name="attrList">属性列表</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.TagHelper.GetTagListByAttr``1(System.String,System.String,System.String)">
            <summary>
            根据属性获取标签
            </summary>
            <typeparam name="T"></typeparam>
            <param name="html"></param>
            <param name="attrName">属性名</param>
            <param name="attrValue">属性值</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.TagHelper.GetTagListByAttr``1(System.String,EasyHttp.Model.TagType,System.String,System.String)">
            <summary>
            根据属性获取标签
            </summary>
            <typeparam name="T"></typeparam>
            <param name="html"></param>
            <param name="tagName"></param>
            <param name="attrName">属性名</param>
            <param name="attrValue">属性值</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.TagHelper.GetTagByAttr``1(System.String,System.String,System.String)">
            <summary>
            根据属性获取标签
            </summary>
            <typeparam name="T"></typeparam>
            <param name="html"></param>
            <param name="attrName">属性名</param>
            <param name="attrValue">属性值</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.TagHelper.GetTagByAttr``1(System.String,EasyHttp.Model.TagType,System.String,System.String)">
            <summary>
            根据属性获取标签
            </summary>
            <typeparam name="T"></typeparam>
            <param name="html"></param>
            <param name="tagName"></param>
            <param name="attrName">属性名</param>
            <param name="attrValue">属性值</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.TagHelper.GetTagListByAttrName``1(System.String,System.String)">
            <summary>
            根据属性name获取标签
            </summary>
            <param name="html">html</param>
            <param name="name">name</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.TagHelper.GetTagListByAttrName``1(System.String,EasyHttp.Model.TagType,System.String)">
            <summary>
            根据属性name获取标签
            </summary>
            <typeparam name="T"></typeparam>
            <param name="html"></param>
            <param name="tagName"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.TagHelper.GetTagByAttrName``1(System.String,System.String)">
            <summary>
            根据属性name获取标签
            </summary>
            <param name="html">html</param>
            <param name="name">name</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.TagHelper.GetTagByAttrName``1(System.String,EasyHttp.Model.TagType,System.String)">
            <summary>
            根据属性name获取标签
            </summary>
            <typeparam name="T"></typeparam>
            <param name="html"></param>
            <param name="tagName"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.TagHelper.GetTagListById``1(System.String,System.String)">
            <summary>
            根据ID获取标签
            </summary>
            <param name="html">html</param>
            <param name="id">id</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.TagHelper.GetTagById``1(System.String,System.String)">
            <summary>
            根据ID获取标签
            </summary>
            <param name="html">html</param>
            <param name="id">id</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.TagHelper.GetTagListByClass``1(System.String,System.String)">
            <summary>
            根据Class获取标签
            </summary>
            <param name="html">html</param>
            <param name="className">className</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.TagHelper.GetTagListByClass``1(System.String,EasyHttp.Model.TagType,System.String)">
            <summary>
            根据Class获取标签
            </summary>
            <typeparam name="T"></typeparam>
            <param name="html"></param>
            <param name="tagName"></param>
            <param name="className"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.TagHelper.GetTagByClass``1(System.String,System.String)">
            <summary>
            根据Class获取标签
            </summary>
            <param name="html">html</param>
            <param name="className">className</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.TagHelper.GetTagByClass``1(System.String,EasyHttp.Model.TagType,System.String)">
            <summary>
            根据Class获取标签
            </summary>
            <typeparam name="T"></typeparam>
            <param name="html"></param>
            <param name="tagName"></param>
            <param name="className"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.TagHelper.GetTagListByTagName``1(System.String,EasyHttp.Model.TagType)">
            <summary>
            直接根据标签名获取标签（不是属性name，是标签名称）
            </summary>
            <param name="html">html</param>
            <param name="tagName">标签名称</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.TagHelper.GetTagByTagName``1(System.String,EasyHttp.Model.TagType)">
            <summary>
            直接根据标签名获取标签（不是属性name，是标签名称）
            </summary>
            <param name="html">html</param>
            <param name="tagName">标签名称</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.TagHelper.GetSubTagList``1(System.String)">
            <summary>
            获取子节点
            </summary>
            <typeparam name="T"></typeparam>
            <param name="html">html</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.TagHelper.GetSubTagList``1(System.String,EasyHttp.Model.TagType)">
            <summary>
            获取子节点
            </summary>
            <typeparam name="T"></typeparam>
            <param name="html">html</param>
            <param name="tagType">节点类型</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.TagHelper.GetSubTagListIn``1(System.String,EasyHttp.Model.TagType)">
            <summary>
            获取子节点
            </summary>
            <typeparam name="T"></typeparam>
            <param name="html">html</param>
            <param name="tagType">节点类型</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.TagHelper.GetTagList``1(System.String,EasyHttp.Model.TagType,System.Collections.Generic.List{EasyHttp.Model.TagAttr})">
            <summary>
            获取标签
            </summary>
            <typeparam name="T">标签对象</typeparam>
            <param name="html">html</param>
            <param name="tagType">标签类型</param>
            <param name="attrList">属性链表</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.TagHelper.GetTagNameString(EasyHttp.Model.TagType)">
            <summary>
            根据标签的类型获取标签的名称
            </summary>
            <param name="tagType">标签类型</param>
            <returns></returns>
        </member>
        <member name="T:EasyHttp.Tool.Validator">
            <summary>
            验证器
            </summary>
        </member>
        <member name="M:EasyHttp.Tool.Validator.IsStringDate(System.String)">
            <summary>
            检查一个字符串是否可以转化为日期，一般用于验证用户输入日期的合法性
            </summary>
            <param name="_value">需验证的字符串</param>
            <returns>是否可以转化为日期的bool值</returns>
        </member>
        <member name="M:EasyHttp.Tool.Validator.QuickValidate(System.String,System.String)">
            <summary>
            快速验证一个字符串是否符合制定的正则表达式
            </summary>
            <param name="_express">正则表达式的内容</param>
            <param name="_value">需验证的字符串</param>
            <returns>是否合法的bool值</returns>
        </member>
        <member name="M:EasyHttp.Tool.Validator.IsNumeric(System.String)">
            <summary>
            检查一个字符串是否纯数字构成的，一般用于查询字符串参数的有效性验证
            </summary>
            <param name="_value">需验证字符串</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.Validator.IsNumeric(System.Object)">
            <summary>
            判断对象是否为Int32类型的数字
            </summary>
            <param name="Expression"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.Validator.IsLetterOrNamber(System.String)">
            <summary>
            检查一个字符串是否是纯字母和数字构成的，一般用于查询字符串参数的有效验证
            </summary>
            <param name="_value">需验证的字符串</param>
            <returns>是否合法的bool值</returns>
        </member>
        <member name="M:EasyHttp.Tool.Validator.IsNumber(System.String)">
            <summary>
            判断是否是数字，包括小数和整数
            </summary>
            <param name="_value">需验证的字符串</param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.Validator.IsEmail(System.String)">
            <summary>
            判断一个字符串是否为邮件
            </summary>
            <param name="_value"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.Validator.IsIDCard(System.String)">
            <summary>
            判断是否是身份证号ID号
            </summary>
            <param name="_value"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.Validator.IsInt(System.String)">
            <summary>
            判断一个字符串是否为Int
            </summary>
            <param name="_value"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.Validator.IsMobileNum(System.String)">
            <summary>
            判断一个字符串是否为手机号码
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.Validator.IsPhoneNum(System.String)">
            <summary>
            判断一个字符串是否为电话号码
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.Validator.IsUrl(System.String)">
            <summary>
            判断一个字符串是否为网址
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.Validator.IsWordAndNum(System.String)">
            <summary>
            判断一个字符串是否为字母加数字
            Regex("[a-zA-Z0-9]?"
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.Validator.IsDouble(System.Object)">
            <summary>
            是否为Double类型
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:EasyHttp.Tool.Validator.IsNumericArray(System.String[])">
            <summary>
            判断给定的字符串数组(strNumber)中的数据是不是都为数值型
            </summary>
            <param name="strNumber">要确认的字符串数组</param>
            <returns>是则返加true 不是则返回 false</returns>
        </member>
    </members>
</doc>
